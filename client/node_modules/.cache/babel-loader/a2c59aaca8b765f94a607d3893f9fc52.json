{"ast":null,"code":"var API_URL = 'http://localhost:3001/api';\nexport var articleView = function articleView(payload) {\n  return {\n    type: 'VIEW_ARTICLE',\n    payload: payload\n  };\n};\nexport var likeArticle = function likeArticle(article) {\n  return {\n    type: 'LIKE_ARTICLE',\n    article: article\n  };\n};\nexport var fetchArticles = function fetchArticles() {\n  var data = {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  return function (dispatch) {\n    fetch(\"\".concat(API_URL, \"/articles\"), data).then(function (response) {\n      return response.json();\n    }).then(function (articles) {\n      dispatch({\n        type: 'FETCH_ARTICLES',\n        payload: articles\n      });\n    }).catch(function (err) {\n      return err;\n    });\n  };\n};\nexport var addArticle = function addArticle(article) {\n  console.log('C');\n  var data = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      article: article\n    })\n  };\n  return function (dispatch) {\n    fetch(\"\".concat(API_URL, \"/articles\"), data).then(function (response) {\n      return response.json();\n    }).then(function (article) {\n      console.log('D');\n      dispatch({\n        // case I want to match\n        type: 'ADD_ARTICLE',\n        //data I want to give\n        payload: article\n      });\n    }).catch(function (err) {\n      return err;\n    });\n  };\n  console.log('E');\n};\nexport var deleteArticle = function deleteArticle(id) {\n  var data = {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  return function (dispatch) {\n    fetch(\"\".concat(API_URL, \"/articles/\").concat(id), data).then(function (response) {\n      return response.json();\n    }).then(function (article) {\n      return dispatch({\n        type: 'DELETE_ARTICLE',\n        payload: article\n      });\n    }).catch(function (err) {\n      return err;\n    });\n  };\n};\nexport var likesArticle = function likesArticle(article) {\n  var data = {\n    method: 'PATCH',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      article: article\n    })\n  };\n  return function (dispatch) {\n    fetch(\"\".concat(API_URL, \"/articles/\").concat(article.id), data).then(function (res) {\n      return res.json();\n    }).then(function (article) {\n      dispatch(likeArticle(article));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sharminaakhtar/mentalhealth/client/src/actions/articleActions.js"],"names":["API_URL","articleView","payload","type","likeArticle","article","fetchArticles","data","method","headers","dispatch","fetch","then","response","json","articles","catch","err","addArticle","console","log","body","JSON","stringify","deleteArticle","id","likesArticle","res"],"mappings":"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","sourcesContent":["\nconst API_URL = 'http://localhost:3001/api'\n\n\n export const articleView = (payload) => {\n    return {\n      type: 'VIEW_ARTICLE',\n      payload\n    }\n  }\n\n  export const likeArticle = (article) => {\n    return {\n      type: 'LIKE_ARTICLE',\n      article\n    };\n  };\n\n\n\n\nexport const fetchArticles = () => {\n    let data = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    }\n    return dispatch => {\n      fetch(`${ API_URL }/articles`, data)\n        .then(response => response.json())\n        .then(articles => {\n          dispatch({\n              type: 'FETCH_ARTICLES',\n              payload: articles\n          })\n        })\n        .catch(err => err)\n    }\n  }\n\n  export const addArticle = (article) => {\n    console.log('C')\n    let data = {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({article})\n    }\n   \n    return dispatch => {\n\n      fetch(`${ API_URL }/articles`, data)\n        .then(response => response.json())\n        .then(article => {\n          console.log('D')\n          dispatch({\n            // case I want to match\n                  type: 'ADD_ARTICLE', \n                  //data I want to give\n                  payload: article\n                })})\n        .catch(err => err)\n    }\n    console.log('E')\n  }\n\n  export const deleteArticle = (id) => {\n    let data = {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    } \n    return dispatch => {\n      fetch(`${ API_URL }/articles/${ id }`, data)\n        .then(response => response.json())\n        .then(article => dispatch({\n          type: 'DELETE_ARTICLE',\n          payload: article\n        }))\n        .catch(err => err)\n    }\n  }\n\n   export const likesArticle = (article) => {\n\n   let data = {\n        method: 'PATCH',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({article})\n      }\n     \n      return dispatch => {\n        fetch(`${ API_URL }/articles/${article.id}`, data)\n          .then(res => res.json())\n          .then(article => {\n          \n          dispatch(likeArticle(article));\n          \n    }).catch(err => console.log(err));\n  }\n}"]},"metadata":{},"sourceType":"module"}
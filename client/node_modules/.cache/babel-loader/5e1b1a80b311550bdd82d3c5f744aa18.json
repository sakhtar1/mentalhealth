{"ast":null,"code":"import _classCallCheck from \"/Users/sharminaakhtar/mentalhealth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sharminaakhtar/mentalhealth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sharminaakhtar/mentalhealth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sharminaakhtar/mentalhealth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sharminaakhtar/mentalhealth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sharminaakhtar/mentalhealth/src/components/Homepage.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport ReactDOM from 'react-dom';\nvar mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\nexport var CurrentLocation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CurrentLocation, _React$Component);\n\n  function CurrentLocation(props) {\n    var _this;\n\n    _classCallCheck(this, CurrentLocation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrentLocation).call(this, props));\n    var _this$props$initialCe = _this.props.initialCenter,\n        lat = _this$props$initialCe.lat,\n        lng = _this$props$initialCe.lng;\n    _this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n    return _this;\n  }\n\n  _createClass(CurrentLocation, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.google !== this.props.google) {\n        this.loadMap();\n      }\n\n      if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n      }\n    }\n  }, {\n    key: \"recenterMap\",\n    value: function recenterMap() {\n      var map = this.map;\n      var current = this.state.currentLocation;\n      var google = this.props.google;\n      var maps = google.maps;\n\n      if (map) {\n        var center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this2.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n\n      this.loadMap();\n    }\n  }, {\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = this.props.zoom;\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this3 = this;\n\n      var children = this.props.children;\n      if (!children) return;\n      return React.Children.map(children, function (c) {\n        if (!c) return;\n        return React.cloneElement(c, {\n          map: _this3.map,\n          google: _this3.props.google,\n          mapCenter: _this3.state.currentLocation\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = Object.assign({}, mapStyles.map);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: style,\n        ref: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Loading map...\"), this.renderChildren());\n    }\n  }]);\n\n  return CurrentLocation;\n}(React.Component);\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this4;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this4 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this4.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    _this4.onMarkerClick = function (props, marker, e) {\n      return _this4.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    _this4.onClose = function (props) {\n      if (_this4.state.showingInfoWindow) {\n        _this4.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    return _this4;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CurrentLocation, {\n        centerAroundCurrentLocation: true,\n        google: this.props.google,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        onClick: this.onMarkerClick,\n        name: 'current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        marker: this.state.activeMarker,\n        visible: this.state.showingInfoWindow,\n        onClose: this.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.selectedPlace.name))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyD7E2A6vrmhI4LKrK5SKeYTkB-JZ2Zxtd8\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/sharminaakhtar/mentalhealth/src/components/Homepage.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","ReactDOM","mapStyles","map","position","width","height","CurrentLocation","props","initialCenter","lat","lng","state","currentLocation","prevProps","prevState","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","mapRef","refs","node","findDOMNode","zoom","mapConfig","Object","assign","children","Children","c","cloneElement","mapCenter","style","renderChildren","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { lat, lng } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n   recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n   componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\nloadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n   renderChildren() {\n    const { children } = this.props;\n\n    if (!children) return;\n\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n     const style = Object.assign({}, mapStyles.map);\n    return (\n      <div>\n        <div style={style} ref=\"map\">\n          Loading map...\n        </div>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CurrentLocation\n        centerAroundCurrentLocation\n        google={this.props.google}\n      >\n        <Marker onClick={this.onMarkerClick} name={'current location'} />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </CurrentLocation>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyD7E2A6vrmhI4LKrK5SKeYTkB-JZ2Zxtd8\"\n})(MapContainer);\n \n"]},"metadata":{},"sourceType":"module"}
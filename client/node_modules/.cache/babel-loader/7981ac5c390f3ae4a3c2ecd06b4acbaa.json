{"ast":null,"code":"// const API_URL = process.env.APP_API_URL;\nexport var login = function login(user) {\n  return {\n    type: 'LOGIN',\n    user: user\n  };\n};\nexport var articleView = function articleView(payload) {\n  return {\n    type: 'VIEW_ARTICLE',\n    payload: payload\n  };\n}; // export const addArticle = article => {\n//   return { type: 'ADD_ARTICLE', article };\n// };\n// export const setArticles = articles => {\n//   return { type: 'SET_ARTICLES, articles };\n// };\n// export const removeArticle = articleId => {\n//   return { type: 'REMOVE_ARTICLE', articleId };\n// };\n\nexport var substituteArticle = function substituteArticle(article) {\n  return {\n    type: 'SUBSTITUTE_ARTICLE',\n    article: article\n  };\n};\nvar API_URL = 'http://localhost:3001';\nexport var fetchArticle = function fetchArticle() {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/articles\")).then(function (res) {\n      return res.json();\n    }).then(function (articles) {\n      dispatch({\n        type: 'FETCH_ARTICLE',\n        payload: articles\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var addArticle = function addArticle(article, routerHistory) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/articles\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        article: article\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (article) {\n      if (article.id) {\n        dispatch({\n          type: 'ADD_ARTICLE',\n          payload: article\n        });\n      } else {\n        var err = article.errors.join('\\n\\n');\n        alert(\"\".concat(article.message, \"\\n\\n\").concat(err));\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var deleteArticle = function deleteArticle(articleId, routerHistory) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/articles/\").concat(articleId), {\n      method: 'DELETE'\n    }).then(function (res) {\n      if (res.status === 204) {\n        routerHistory.replace('/articles');\n        dispatch({\n          type: 'DELETE_ARTICLE',\n          payload: articleId\n        });\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var updateArticle = function updateArticle(article) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/articles/\").concat(article.id), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        article: article\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (article) {\n      dispatch(substituteArticle(article));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sharminaakhtar/mentalhealth/client/src/actions/index.js"],"names":["login","user","type","articleView","payload","substituteArticle","article","API_URL","fetchArticle","dispatch","fetch","then","res","json","articles","catch","err","console","log","addArticle","routerHistory","method","headers","body","JSON","stringify","id","errors","join","alert","message","deleteArticle","articleId","status","replace","updateArticle"],"mappings":"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","sourcesContent":["// const API_URL = process.env.APP_API_URL;\n\n\nexport const login = user => {\n  return {\n    type: 'LOGIN',\n    user\n\n  }\n};\n\n export const articleView = (payload) => {\n    return {\n      type: 'VIEW_ARTICLE',\n      payload\n    }\n  }\n\n// export const addArticle = article => {\n//   return { type: 'ADD_ARTICLE', article };\n// };\n\n// export const setArticles = articles => {\n//   return { type: 'SET_ARTICLES, articles };\n// };\n\n// export const removeArticle = articleId => {\n//   return { type: 'REMOVE_ARTICLE', articleId };\n// };\n\nexport const substituteArticle = article => {\n  return { type: 'SUBSTITUTE_ARTICLE', article };\n};\n\n\n const API_URL = 'http://localhost:3001';\nexport const fetchArticle = () => {\n  return dispatch => {\n    return fetch(`${API_URL}/articles`)\n    .then(res => res.json())\n    .then(articles => {\n      dispatch({\n              type: 'FETCH_ARTICLE',\n              payload: articles\n          });\n    }).catch(err => console.log(err))\n  };\n};\n\nexport const addArticle= (article, routerHistory) => {\n  return dispatch => {\n    return fetch(`${API_URL}/articles`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ article })\n    })\n    .then(res => res.json())\n    .then(article => {\n      if (article.id) {\n          dispatch({\n          type: 'ADD_ARTICLE',\n          payload: article\n        });\n      } else {\n        const err = article.errors.join('\\n\\n')\n        alert(`${article.message}\\n\\n${err}`)\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nexport const deleteArticle = (articleId, routerHistory) => {\n  return dispatch => {\n    return fetch(`${API_URL}/articles/${articleId}`, {\n      method: 'DELETE'\n    })\n    .then(res => {\n      if (res.status === 204) {\n        routerHistory.replace('/articles')\n        dispatch({\n          type: 'DELETE_ARTICLE',\n          payload: articleId\n        });\n      }\n    }).catch(err =>  console.log(err));\n  };\n};\n\nexport const updateArticle = (article) => {\n  return dispatch => {\n    return fetch(`${API_URL}/articles/${article.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ article })\n    })\n    .then(res => res.json())\n    .then(article => {\n      dispatch(substituteArticle(article));\n    }).catch(err => console.log(err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
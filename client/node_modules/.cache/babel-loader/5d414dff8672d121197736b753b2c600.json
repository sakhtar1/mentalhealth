{"ast":null,"code":"// const API_URL = process.env.APP_API_URL;\nexport var login = function login(user) {\n  return {\n    type: 'LOGIN',\n    user: user\n  };\n};\nexport var articleView = function articleView(payload) {\n  return {\n    type: 'VIEW_ARTICLE',\n    payload: payload\n  };\n}; // export const addDinner = dinner => {\n//   return { type: 'ADD_DINNER', dinner };\n// };\n// export const setDinners = dinners => {\n//   return { type: 'SET_DINNERS', dinners };\n// };\n// export const removeDinner = dinnerId => {\n//   return { type: 'REMOVE_DINNER', dinnerId };\n// };\n// export const substituteDinner = dinner => {\n//   return { type: 'SUBSTITUTE_DINNER', dinner };\n// };\n\nvar API_URL = 'http://localhost:3001';\nexport var fetchArticle = function fetchArticle() {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/articles\")).then(function (res) {\n      return res.json();\n    }).then(function (articles) {\n      dispatch({\n        type: 'FETCH_ARTICLE',\n        payload: articles\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var addArticle = function addArticle(dinner, routerHistory) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/dinners\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dinner: dinner\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (dinner) {\n      if (dinner.id) {\n        dispatch(addDinner(dinner));\n        routerHistory.push(\"\".concat(dinner.id));\n      } else {\n        var err = dinner.errors.join('\\n\\n');\n        alert(\"\".concat(dinner.message, \"\\n\\n\").concat(err));\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var deleteDinner = function deleteDinner(dinnerId, routerHistory) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/dinners/\").concat(dinnerId), {\n      method: 'DELETE'\n    }).then(function (res) {\n      if (res.status === 204) {\n        routerHistory.replace('/dinners');\n        dispatch(removeDinner(dinnerId));\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var updateDinner = function updateDinner(dinner) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/dinners/\").concat(dinner.id), {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        dinner: dinner\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (dinner) {\n      dispatch(substituteDinner(dinner));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sharminaakhtar/mentalhealth/client/src/actions/index.js"],"names":["login","user","type","articleView","payload","API_URL","fetchArticle","dispatch","fetch","then","res","json","articles","catch","err","console","log","addArticle","dinner","routerHistory","method","headers","body","JSON","stringify","id","addDinner","push","errors","join","alert","message","deleteDinner","dinnerId","status","replace","removeDinner","updateDinner","substituteDinner"],"mappings":"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","sourcesContent":["// const API_URL = process.env.APP_API_URL;\n\n\nexport const login = user => {\n  return {\n    type: 'LOGIN',\n    user\n\n  }\n};\n\n export const articleView = (payload) => {\n    return {\n      type: 'VIEW_ARTICLE',\n      payload\n    }\n  }\n\n// export const addDinner = dinner => {\n//   return { type: 'ADD_DINNER', dinner };\n// };\n\n// export const setDinners = dinners => {\n//   return { type: 'SET_DINNERS', dinners };\n// };\n\n// export const removeDinner = dinnerId => {\n//   return { type: 'REMOVE_DINNER', dinnerId };\n// };\n\n// export const substituteDinner = dinner => {\n//   return { type: 'SUBSTITUTE_DINNER', dinner };\n// };\n\n\n const API_URL = 'http://localhost:3001';\nexport const fetchArticle = () => {\n  return dispatch => {\n    return fetch(`${API_URL}/articles`)\n    .then(res => res.json())\n    .then(articles => {\n      dispatch({\n              type: 'FETCH_ARTICLE',\n              payload: articles\n          });\n    }).catch(err => console.log(err))\n  };\n};\n\nexport const addArticle= (dinner, routerHistory) => {\n  return dispatch => {\n    return fetch(`${API_URL}/dinners`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ dinner })\n    })\n    .then(res => res.json())\n    .then(dinner => {\n      if (dinner.id) {\n          dispatch(addDinner(dinner));\n          routerHistory.push(`${dinner.id}`);\n      } else {\n        const err = dinner.errors.join('\\n\\n')\n        alert(`${dinner.message}\\n\\n${err}`)\n      }\n    }).catch(err => console.log(err));\n  };\n};\n\nexport const deleteDinner = (dinnerId, routerHistory) => {\n  return dispatch => {\n    return fetch(`${API_URL}/dinners/${dinnerId}`, {\n      method: 'DELETE'\n    })\n    .then(res => {\n      if (res.status === 204) {\n        routerHistory.replace('/dinners')\n        dispatch(removeDinner(dinnerId));\n      }\n    }).catch(err =>  console.log(err));\n  };\n};\n\nexport const updateDinner = (dinner) => {\n  return dispatch => {\n    return fetch(`${API_URL}/dinners/${dinner.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ dinner })\n    })\n    .then(res => res.json())\n    .then(dinner => {\n      dispatch(substituteDinner(dinner));\n    }).catch(err => console.log(err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
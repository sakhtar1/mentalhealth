{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Login from './Login';\nimport Signup from './Signup';\nimport RecoverPassword from './RecoverPassword'; // Our only css dependency\n\nimport './normalize.css';\n\nvar ReactSignupLoginComponent = function (_React$Component) {\n  _inherits(ReactSignupLoginComponent, _React$Component);\n\n  function ReactSignupLoginComponent(props) {\n    _classCallCheck(this, ReactSignupLoginComponent);\n\n    var _this = _possibleConstructorReturn(this, (ReactSignupLoginComponent.__proto__ || Object.getPrototypeOf(ReactSignupLoginComponent)).call(this, props));\n\n    _this.updateState = _this.updateState.bind(_this);\n    _this.bubleUpSignup = _this.bubleUpSignup.bind(_this);\n    _this.bubleUpLogin = _this.bubleUpLogin.bind(_this);\n    _this.bubleUpRecoverPassword = _this.bubleUpRecoverPassword.bind(_this);\n    _this.state = {\n      isLogin: _this.props.isLogin,\n      isRecoveringPassword: _this.props.isRecoveringPassword,\n      username: '',\n      password: '',\n      passwordConfirmation: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReactSignupLoginComponent, [{\n    key: 'updateState',\n    value: function updateState(key, value) {\n      this.setState(_defineProperty({}, key, value));\n    }\n  }, {\n    key: 'bubleUpSignup',\n    value: function bubleUpSignup() {\n      this.props.handleSignup({\n        username: this.state.username,\n        password: this.state.password,\n        passwordConfirmation: this.state.passwordConfirmation\n      });\n    }\n  }, {\n    key: 'bubleUpLogin',\n    value: function bubleUpLogin() {\n      this.props.handleLogin({\n        username: this.state.username,\n        password: this.state.password\n      });\n    }\n  }, {\n    key: 'bubleUpRecoverPassword',\n    value: function bubleUpRecoverPassword() {\n      this.props.handleRecoverPassword({\n        username: this.state.username\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var styles = {\n        wrapper: {\n          border: '1px solid #eee',\n          borderRadius: 3,\n          backgroundColor: '#FAFAFA',\n          margin: 10,\n          padding: 20,\n          maxWidth: '500px',\n          width: 500,\n          height: 400,\n          perspective: 1000\n        },\n        title: {\n          textAlign: 'center',\n          height: 40,\n          lineHeight: '40px'\n        },\n        flipper: {\n          transition: '0.4s',\n          transformStyle: 'preserve-3d',\n          position: 'relative',\n          transform: 'rotateY(' + (!this.state.isLogin || this.state.isRecoveringPassword ? '180' : '0') + 'deg)'\n        }\n      };\n\n      var showCard = function showCard() {\n        if (_this2.state.isLogin && !_this2.state.isRecoveringPassword) {\n          return React.createElement(Login, {\n            key: 'login-form',\n            handleShowSignup: _this2.updateState,\n            handleShowRecover: _this2.updateState,\n            styles: _this2.props.styles.login,\n            handleLogin: _this2.bubleUpLogin,\n            handleChange: _this2.updateState,\n            username: _this2.state.username,\n            password: _this2.state.password,\n            usernameCustomLabel: _this2.props.usernameCustomLabel,\n            passwordCustomLabel: _this2.props.passwordCustomLabel,\n            recoverPasswordCustomLabel: _this2.props.recoverPasswordCustomLabel,\n            goToSignupCustomLabel: _this2.props.goToSignupCustomLabel,\n            submitLoginCustomLabel: _this2.props.submitLoginCustomLabel\n          });\n        } else if (!_this2.state.isLogin && !_this2.state.isRecoveringPassword) {\n          return React.createElement(Signup, {\n            key: 'signup-form',\n            handleShowLogin: _this2.updateState,\n            styles: _this2.props.styles.signup,\n            handleSignup: _this2.bubleUpSignup,\n            handleChange: _this2.updateState,\n            username: _this2.state.username,\n            password: _this2.state.password,\n            passwordConfirmation: _this2.state.passwordConfirmation,\n            usernameCustomLabel: _this2.props.usernameCustomLabel,\n            passwordCustomLabel: _this2.props.passwordCustomLabel,\n            passwordConfirmationCustomLabel: _this2.props.passwordConfirmationCustomLabel,\n            goToLoginCustomLabel: _this2.props.goToLoginCustomLabel,\n            submitSignupCustomLabel: _this2.props.submitSignupCustomLabel\n          });\n        }\n\n        return React.createElement(RecoverPassword, {\n          handleShowLogin: _this2.updateState,\n          handleRecoverPassword: _this2.bubleUpRecoverPassword,\n          handleChange: _this2.updateState,\n          styles: _this2.props.styles.recoverPassword,\n          username: _this2.state.username,\n          usernameCustomLabel: _this2.props.usernameCustomLabel,\n          goToLoginCustomLabel: _this2.props.goToLoginCustomLabel,\n          submitRecoverPasswordCustomLabel: _this2.props.submitRecoverPasswordCustomLabel\n        });\n      };\n\n      return React.createElement('section', {\n        id: 'main-wrapper',\n        style: Object.assign(styles.wrapper, this.props.styles.mainWrapper)\n      }, React.createElement('h1', {\n        style: Object.assign(styles.title, this.props.styles.mainTitle)\n      }, this.props.title), React.createElement('div', {\n        style: Object.assign(styles.flipper, this.props.styles.flipper)\n      }, showCard()));\n    }\n  }]);\n\n  return ReactSignupLoginComponent;\n}(React.Component);\n\nReactSignupLoginComponent.propTypes = {\n  title: PropTypes.string,\n  isLogin: PropTypes.bool,\n  isRecoveringPassword: PropTypes.bool,\n  styles: PropTypes.shape({\n    mainWrapper: PropTypes.object,\n    mainTitle: PropTypes.object,\n    flipper: PropTypes.object,\n    signup: PropTypes.shape({\n      wrapper: PropTypes.object,\n      inputWrapper: PropTypes.object,\n      buttonsWrapper: PropTypes.object,\n      input: PropTypes.object,\n      recoverPassword: PropTypes.object,\n      button: PropTypes.object\n    }),\n    login: PropTypes.shape({\n      wrapper: PropTypes.object,\n      inputWrapper: PropTypes.object,\n      buttonsWrapper: PropTypes.object,\n      input: PropTypes.object,\n      recoverPasswordWrapper: PropTypes.object,\n      recoverPasswordButton: PropTypes.object,\n      button: PropTypes.object\n    }),\n    recoverPassword: PropTypes.shape({\n      wrapper: PropTypes.object,\n      inputWrapper: PropTypes.object,\n      buttonsWrapper: PropTypes.object,\n      input: PropTypes.object,\n      button: PropTypes.object\n    })\n  }),\n  handleSignup: PropTypes.func.isRequired,\n  handleLogin: PropTypes.func.isRequired,\n  handleRecoverPassword: PropTypes.func.isRequired,\n  usernameCustomLabel: PropTypes.string,\n  passwordCustomLabel: PropTypes.string,\n  passwordConfirmationCustomLabel: PropTypes.string,\n  recoverPasswordCustomLabel: PropTypes.string,\n  goToSignupCustomLabel: PropTypes.string,\n  submitLoginCustomLabel: PropTypes.string,\n  goToLoginCustomLabel: PropTypes.string,\n  submitSignupCustomLabel: PropTypes.string,\n  submitRecoverPasswordCustomLabel: PropTypes.string\n};\nReactSignupLoginComponent.defaultProps = {\n  title: 'Company Name',\n  isLogin: true,\n  isRecoveringPassword: false,\n  styles: {},\n  usernameCustomLabel: 'Username',\n  passwordCustomLabel: 'Password',\n  passwordConfirmationCustomLabel: 'Confirm password',\n  recoverPasswordCustomLabel: 'Recover Password',\n  goToSignupCustomLabel: 'Signup',\n  goToLoginCustomLabel: 'Login',\n  submitLoginCustomLabel: 'Signup',\n  submitSignupCustomLabel: 'Signup',\n  submitRecoverPasswordCustomLabel: 'Recover'\n};\nexport default ReactSignupLoginComponent;","map":null,"metadata":{},"sourceType":"module"}